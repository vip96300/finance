<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rw.finance.client.dao.OrderCountMapper">
  <resultMap id="BaseResultMap" type="com.rw.finance.common.entity.OrderCount">
    <id column="count_id" jdbcType="BIGINT" property="countId" />
    <result column="agent_profit_total" jdbcType="DOUBLE" property="agentProfitTotal" />
    <result column="company_profit_total" jdbcType="DOUBLE" property="companyProfitTotal" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="member_profit_total" jdbcType="DOUBLE" property="memberProfitTotal" />
    <result column="trade_amount" jdbcType="DOUBLE" property="tradeAmount" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="trade_type" jdbcType="VARCHAR" property="tradeType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    count_id, agent_profit_total, company_profit_total, create_time, member_profit_total, 
    trade_amount, trade_no, trade_type
  </sql>
  <select id="selectByExample" parameterType="com.rw.finance.common.entity.OrderCountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_count
    where count_id = #{countId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_count
    where count_id = #{countId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.rw.finance.common.entity.OrderCountExample">
    delete from order_count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rw.finance.common.entity.OrderCount">
    insert into order_count (count_id, agent_profit_total, company_profit_total, 
      create_time, member_profit_total, trade_amount, 
      trade_no, trade_type)
    values (#{countId,jdbcType=BIGINT}, #{agentProfitTotal,jdbcType=DOUBLE}, #{companyProfitTotal,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=VARCHAR}, #{memberProfitTotal,jdbcType=DOUBLE}, #{tradeAmount,jdbcType=DOUBLE}, 
      #{tradeNo,jdbcType=VARCHAR}, #{tradeType,jdbcType=VARCHAR})
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="countId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.rw.finance.common.entity.OrderCount">
    insert into order_count
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="countId != null">
        count_id,
      </if>
      <if test="agentProfitTotal != null">
        agent_profit_total,
      </if>
      <if test="companyProfitTotal != null">
        company_profit_total,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="memberProfitTotal != null">
        member_profit_total,
      </if>
      <if test="tradeAmount != null">
        trade_amount,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="tradeType != null">
        trade_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="countId != null">
        #{countId,jdbcType=BIGINT},
      </if>
      <if test="agentProfitTotal != null">
        #{agentProfitTotal,jdbcType=DOUBLE},
      </if>
      <if test="companyProfitTotal != null">
        #{companyProfitTotal,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="memberProfitTotal != null">
        #{memberProfitTotal,jdbcType=DOUBLE},
      </if>
      <if test="tradeAmount != null">
        #{tradeAmount,jdbcType=DOUBLE},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null">
        #{tradeType,jdbcType=VARCHAR},
      </if>
    </trim>
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="countId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.rw.finance.common.entity.OrderCountExample" resultType="java.lang.Long">
    select count(*) from order_count
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_count
    <set>
      <if test="record.countId != null">
        count_id = #{record.countId,jdbcType=BIGINT},
      </if>
      <if test="record.agentProfitTotal != null">
        agent_profit_total = #{record.agentProfitTotal,jdbcType=DOUBLE},
      </if>
      <if test="record.companyProfitTotal != null">
        company_profit_total = #{record.companyProfitTotal,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.memberProfitTotal != null">
        member_profit_total = #{record.memberProfitTotal,jdbcType=DOUBLE},
      </if>
      <if test="record.tradeAmount != null">
        trade_amount = #{record.tradeAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeType != null">
        trade_type = #{record.tradeType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_count
    set count_id = #{record.countId,jdbcType=BIGINT},
      agent_profit_total = #{record.agentProfitTotal,jdbcType=DOUBLE},
      company_profit_total = #{record.companyProfitTotal,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      member_profit_total = #{record.memberProfitTotal,jdbcType=DOUBLE},
      trade_amount = #{record.tradeAmount,jdbcType=DOUBLE},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      trade_type = #{record.tradeType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rw.finance.common.entity.OrderCount">
    update order_count
    <set>
      <if test="agentProfitTotal != null">
        agent_profit_total = #{agentProfitTotal,jdbcType=DOUBLE},
      </if>
      <if test="companyProfitTotal != null">
        company_profit_total = #{companyProfitTotal,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="memberProfitTotal != null">
        member_profit_total = #{memberProfitTotal,jdbcType=DOUBLE},
      </if>
      <if test="tradeAmount != null">
        trade_amount = #{tradeAmount,jdbcType=DOUBLE},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null">
        trade_type = #{tradeType,jdbcType=VARCHAR},
      </if>
    </set>
    where count_id = #{countId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rw.finance.common.entity.OrderCount">
    update order_count
    set agent_profit_total = #{agentProfitTotal,jdbcType=DOUBLE},
      company_profit_total = #{companyProfitTotal,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=VARCHAR},
      member_profit_total = #{memberProfitTotal,jdbcType=DOUBLE},
      trade_amount = #{tradeAmount,jdbcType=DOUBLE},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      trade_type = #{tradeType,jdbcType=VARCHAR}
    where count_id = #{countId,jdbcType=BIGINT}
  </update>
</mapper>