<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rw.finance.client.dao.AgentProfitMapper">
  <resultMap id="BaseResultMap" type="com.rw.finance.common.entity.AgentProfit">
    <id column="profit_id" jdbcType="BIGINT" property="profitId" />
    <result column="agent_id" jdbcType="BIGINT" property="agentId" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="profit_type" jdbcType="INTEGER" property="profitType" />
    <result column="pro_member_id" jdbcType="BIGINT" property="proMemberId" />
    <result column="rate" jdbcType="DOUBLE" property="rate" />
    <result column="trade_amount" jdbcType="DOUBLE" property="tradeAmount" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    profit_id, agent_id, amount, create_time, order_id, profit_type, pro_member_id, rate, 
    trade_amount, trade_no
  </sql>
  <select id="selectByExample" parameterType="com.rw.finance.common.entity.AgentProfitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent_profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent_profit
    where profit_id = #{profitId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from agent_profit
    where profit_id = #{profitId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.rw.finance.common.entity.AgentProfitExample">
    delete from agent_profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rw.finance.common.entity.AgentProfit">
    insert into agent_profit (profit_id, agent_id, amount, 
      create_time, order_id, profit_type, 
      pro_member_id, rate, trade_amount, 
      trade_no)
    values (#{profitId,jdbcType=BIGINT}, #{agentId,jdbcType=BIGINT}, #{amount,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT}, #{profitType,jdbcType=INTEGER}, 
      #{proMemberId,jdbcType=BIGINT}, #{rate,jdbcType=DOUBLE}, #{tradeAmount,jdbcType=DOUBLE}, 
      #{tradeNo,jdbcType=VARCHAR})
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="profitId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.rw.finance.common.entity.AgentProfit">
    insert into agent_profit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="profitId != null">
        profit_id,
      </if>
      <if test="agentId != null">
        agent_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="profitType != null">
        profit_type,
      </if>
      <if test="proMemberId != null">
        pro_member_id,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="tradeAmount != null">
        trade_amount,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="profitId != null">
        #{profitId,jdbcType=BIGINT},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="profitType != null">
        #{profitType,jdbcType=INTEGER},
      </if>
      <if test="proMemberId != null">
        #{proMemberId,jdbcType=BIGINT},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DOUBLE},
      </if>
      <if test="tradeAmount != null">
        #{tradeAmount,jdbcType=DOUBLE},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
    </trim>
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="profitId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.rw.finance.common.entity.AgentProfitExample" resultType="java.lang.Long">
    select count(*) from agent_profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent_profit
    <set>
      <if test="record.profitId != null">
        profit_id = #{record.profitId,jdbcType=BIGINT},
      </if>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.profitType != null">
        profit_type = #{record.profitType,jdbcType=INTEGER},
      </if>
      <if test="record.proMemberId != null">
        pro_member_id = #{record.proMemberId,jdbcType=BIGINT},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=DOUBLE},
      </if>
      <if test="record.tradeAmount != null">
        trade_amount = #{record.tradeAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent_profit
    set profit_id = #{record.profitId,jdbcType=BIGINT},
      agent_id = #{record.agentId,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=BIGINT},
      profit_type = #{record.profitType,jdbcType=INTEGER},
      pro_member_id = #{record.proMemberId,jdbcType=BIGINT},
      rate = #{record.rate,jdbcType=DOUBLE},
      trade_amount = #{record.tradeAmount,jdbcType=DOUBLE},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rw.finance.common.entity.AgentProfit">
    update agent_profit
    <set>
      <if test="agentId != null">
        agent_id = #{agentId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="profitType != null">
        profit_type = #{profitType,jdbcType=INTEGER},
      </if>
      <if test="proMemberId != null">
        pro_member_id = #{proMemberId,jdbcType=BIGINT},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=DOUBLE},
      </if>
      <if test="tradeAmount != null">
        trade_amount = #{tradeAmount,jdbcType=DOUBLE},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
    </set>
    where profit_id = #{profitId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rw.finance.common.entity.AgentProfit">
    update agent_profit
    set agent_id = #{agentId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=BIGINT},
      profit_type = #{profitType,jdbcType=INTEGER},
      pro_member_id = #{proMemberId,jdbcType=BIGINT},
      rate = #{rate,jdbcType=DOUBLE},
      trade_amount = #{tradeAmount,jdbcType=DOUBLE},
      trade_no = #{tradeNo,jdbcType=VARCHAR}
    where profit_id = #{profitId,jdbcType=BIGINT}
  </update>
</mapper>