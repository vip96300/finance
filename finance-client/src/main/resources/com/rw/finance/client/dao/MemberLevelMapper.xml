<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rw.finance.client.dao.MemberLevelMapper">
  <resultMap id="BaseResultMap" type="com.rw.finance.common.entity.MemberLevel">
    <id column="level_id" jdbcType="BIGINT" property="levelId" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="borrow_rate" jdbcType="DOUBLE" property="borrowRate" />
    <result column="cash_rate" jdbcType="DOUBLE" property="cashRate" />
    <result column="repay_rate" jdbcType="DOUBLE" property="repayRate" />
    <result column="channel_id" jdbcType="BIGINT" property="channelId" />
    <result column="borrow_poundage" jdbcType="DOUBLE" property="borrowPoundage" />
    <result column="cash_poundage" jdbcType="DOUBLE" property="cashPoundage" />
    <result column="repay_poundage" jdbcType="DOUBLE" property="repayPoundage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    level_id, level, borrow_rate, cash_rate, repay_rate, channel_id, borrow_poundage, 
    cash_poundage, repay_poundage
  </sql>
  <select id="selectByExample" parameterType="com.rw.finance.common.entity.MemberLevelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member_level
    where level_id = #{levelId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from member_level
    where level_id = #{levelId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.rw.finance.common.entity.MemberLevelExample">
    delete from member_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rw.finance.common.entity.MemberLevel">
    insert into member_level (level_id, level, borrow_rate, 
      cash_rate, repay_rate, channel_id, 
      borrow_poundage, cash_poundage, repay_poundage
      )
    values (#{levelId,jdbcType=BIGINT}, #{level,jdbcType=INTEGER}, #{borrowRate,jdbcType=DOUBLE}, 
      #{cashRate,jdbcType=DOUBLE}, #{repayRate,jdbcType=DOUBLE}, #{channelId,jdbcType=BIGINT}, 
      #{borrowPoundage,jdbcType=DOUBLE}, #{cashPoundage,jdbcType=DOUBLE}, #{repayPoundage,jdbcType=DOUBLE}
      )
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="levelId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.rw.finance.common.entity.MemberLevel">
    insert into member_level
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="levelId != null">
        level_id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="borrowRate != null">
        borrow_rate,
      </if>
      <if test="cashRate != null">
        cash_rate,
      </if>
      <if test="repayRate != null">
        repay_rate,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="borrowPoundage != null">
        borrow_poundage,
      </if>
      <if test="cashPoundage != null">
        cash_poundage,
      </if>
      <if test="repayPoundage != null">
        repay_poundage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="levelId != null">
        #{levelId,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="borrowRate != null">
        #{borrowRate,jdbcType=DOUBLE},
      </if>
      <if test="cashRate != null">
        #{cashRate,jdbcType=DOUBLE},
      </if>
      <if test="repayRate != null">
        #{repayRate,jdbcType=DOUBLE},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=BIGINT},
      </if>
      <if test="borrowPoundage != null">
        #{borrowPoundage,jdbcType=DOUBLE},
      </if>
      <if test="cashPoundage != null">
        #{cashPoundage,jdbcType=DOUBLE},
      </if>
      <if test="repayPoundage != null">
        #{repayPoundage,jdbcType=DOUBLE},
      </if>
    </trim>
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="levelId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.rw.finance.common.entity.MemberLevelExample" resultType="java.lang.Long">
    select count(*) from member_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member_level
    <set>
      <if test="record.levelId != null">
        level_id = #{record.levelId,jdbcType=BIGINT},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.borrowRate != null">
        borrow_rate = #{record.borrowRate,jdbcType=DOUBLE},
      </if>
      <if test="record.cashRate != null">
        cash_rate = #{record.cashRate,jdbcType=DOUBLE},
      </if>
      <if test="record.repayRate != null">
        repay_rate = #{record.repayRate,jdbcType=DOUBLE},
      </if>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=BIGINT},
      </if>
      <if test="record.borrowPoundage != null">
        borrow_poundage = #{record.borrowPoundage,jdbcType=DOUBLE},
      </if>
      <if test="record.cashPoundage != null">
        cash_poundage = #{record.cashPoundage,jdbcType=DOUBLE},
      </if>
      <if test="record.repayPoundage != null">
        repay_poundage = #{record.repayPoundage,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member_level
    set level_id = #{record.levelId,jdbcType=BIGINT},
      level = #{record.level,jdbcType=INTEGER},
      borrow_rate = #{record.borrowRate,jdbcType=DOUBLE},
      cash_rate = #{record.cashRate,jdbcType=DOUBLE},
      repay_rate = #{record.repayRate,jdbcType=DOUBLE},
      channel_id = #{record.channelId,jdbcType=BIGINT},
      borrow_poundage = #{record.borrowPoundage,jdbcType=DOUBLE},
      cash_poundage = #{record.cashPoundage,jdbcType=DOUBLE},
      repay_poundage = #{record.repayPoundage,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rw.finance.common.entity.MemberLevel">
    update member_level
    <set>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="borrowRate != null">
        borrow_rate = #{borrowRate,jdbcType=DOUBLE},
      </if>
      <if test="cashRate != null">
        cash_rate = #{cashRate,jdbcType=DOUBLE},
      </if>
      <if test="repayRate != null">
        repay_rate = #{repayRate,jdbcType=DOUBLE},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=BIGINT},
      </if>
      <if test="borrowPoundage != null">
        borrow_poundage = #{borrowPoundage,jdbcType=DOUBLE},
      </if>
      <if test="cashPoundage != null">
        cash_poundage = #{cashPoundage,jdbcType=DOUBLE},
      </if>
      <if test="repayPoundage != null">
        repay_poundage = #{repayPoundage,jdbcType=DOUBLE},
      </if>
    </set>
    where level_id = #{levelId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rw.finance.common.entity.MemberLevel">
    update member_level
    set level = #{level,jdbcType=INTEGER},
      borrow_rate = #{borrowRate,jdbcType=DOUBLE},
      cash_rate = #{cashRate,jdbcType=DOUBLE},
      repay_rate = #{repayRate,jdbcType=DOUBLE},
      channel_id = #{channelId,jdbcType=BIGINT},
      borrow_poundage = #{borrowPoundage,jdbcType=DOUBLE},
      cash_poundage = #{cashPoundage,jdbcType=DOUBLE},
      repay_poundage = #{repayPoundage,jdbcType=DOUBLE}
    where level_id = #{levelId,jdbcType=BIGINT}
  </update>
</mapper>