<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rw.finance.client.dao.ActvcodeInfoMapper">
  <resultMap id="BaseResultMap" type="com.rw.finance.common.entity.ActvcodeInfo">
    <id column="active_id" jdbcType="BIGINT" property="activeId" />
    <result column="active_code" jdbcType="VARCHAR" property="activeCode" />
    <result column="agent_id" jdbcType="BIGINT" property="agentId" />
    <result column="agent_name" jdbcType="VARCHAR" property="agentName" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="sale_status" jdbcType="INTEGER" property="saleStatus" />
    <result column="use_status" jdbcType="INTEGER" property="useStatus" />
    <result column="use_time" jdbcType="VARCHAR" property="useTime" />
    <result column="price" jdbcType="DOUBLE" property="price" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    active_id, active_code, agent_id, agent_name, create_time, level, member_id, sale_status, 
    use_status, use_time, price
  </sql>
  <select id="selectByExample" parameterType="com.rw.finance.common.entity.ActvcodeInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from actvcode_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from actvcode_info
    where active_id = #{activeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from actvcode_info
    where active_id = #{activeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.rw.finance.common.entity.ActvcodeInfoExample">
    delete from actvcode_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rw.finance.common.entity.ActvcodeInfo">
    insert into actvcode_info (active_id, active_code, agent_id, 
      agent_name, create_time, level, 
      member_id, sale_status, use_status, 
      use_time, price)
    values (#{activeId,jdbcType=BIGINT}, #{activeCode,jdbcType=VARCHAR}, #{agentId,jdbcType=BIGINT}, 
      #{agentName,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{memberId,jdbcType=BIGINT}, #{saleStatus,jdbcType=INTEGER}, #{useStatus,jdbcType=INTEGER}, 
      #{useTime,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE})
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="activeId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.rw.finance.common.entity.ActvcodeInfo">
    insert into actvcode_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="activeId != null">
        active_id,
      </if>
      <if test="activeCode != null">
        active_code,
      </if>
      <if test="agentId != null">
        agent_id,
      </if>
      <if test="agentName != null">
        agent_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="saleStatus != null">
        sale_status,
      </if>
      <if test="useStatus != null">
        use_status,
      </if>
      <if test="useTime != null">
        use_time,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="activeId != null">
        #{activeId,jdbcType=BIGINT},
      </if>
      <if test="activeCode != null">
        #{activeCode,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=BIGINT},
      </if>
      <if test="agentName != null">
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="saleStatus != null">
        #{saleStatus,jdbcType=INTEGER},
      </if>
      <if test="useStatus != null">
        #{useStatus,jdbcType=INTEGER},
      </if>
      <if test="useTime != null">
        #{useTime,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
    </trim>
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="activeId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.rw.finance.common.entity.ActvcodeInfoExample" resultType="java.lang.Long">
    select count(*) from actvcode_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update actvcode_info
    <set>
      <if test="record.activeId != null">
        active_id = #{record.activeId,jdbcType=BIGINT},
      </if>
      <if test="record.activeCode != null">
        active_code = #{record.activeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=BIGINT},
      </if>
      <if test="record.agentName != null">
        agent_name = #{record.agentName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=BIGINT},
      </if>
      <if test="record.saleStatus != null">
        sale_status = #{record.saleStatus,jdbcType=INTEGER},
      </if>
      <if test="record.useStatus != null">
        use_status = #{record.useStatus,jdbcType=INTEGER},
      </if>
      <if test="record.useTime != null">
        use_time = #{record.useTime,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update actvcode_info
    set active_id = #{record.activeId,jdbcType=BIGINT},
      active_code = #{record.activeCode,jdbcType=VARCHAR},
      agent_id = #{record.agentId,jdbcType=BIGINT},
      agent_name = #{record.agentName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=BIGINT},
      sale_status = #{record.saleStatus,jdbcType=INTEGER},
      use_status = #{record.useStatus,jdbcType=INTEGER},
      use_time = #{record.useTime,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rw.finance.common.entity.ActvcodeInfo">
    update actvcode_info
    <set>
      <if test="activeCode != null">
        active_code = #{activeCode,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        agent_id = #{agentId,jdbcType=BIGINT},
      </if>
      <if test="agentName != null">
        agent_name = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="saleStatus != null">
        sale_status = #{saleStatus,jdbcType=INTEGER},
      </if>
      <if test="useStatus != null">
        use_status = #{useStatus,jdbcType=INTEGER},
      </if>
      <if test="useTime != null">
        use_time = #{useTime,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
    </set>
    where active_id = #{activeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rw.finance.common.entity.ActvcodeInfo">
    update actvcode_info
    set active_code = #{activeCode,jdbcType=VARCHAR},
      agent_id = #{agentId,jdbcType=BIGINT},
      agent_name = #{agentName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      member_id = #{memberId,jdbcType=BIGINT},
      sale_status = #{saleStatus,jdbcType=INTEGER},
      use_status = #{useStatus,jdbcType=INTEGER},
      use_time = #{useTime,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE}
    where active_id = #{activeId,jdbcType=BIGINT}
  </update>
</mapper>