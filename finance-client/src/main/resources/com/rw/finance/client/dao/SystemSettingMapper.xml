<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rw.finance.client.dao.SystemSettingMapper">
  <resultMap id="BaseResultMap" type="com.rw.finance.common.entity.SystemSetting">
    <id column="dict_id" jdbcType="BIGINT" property="dictId" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="dict_key" jdbcType="VARCHAR" property="dictKey" />
    <result column="dict_val" jdbcType="VARCHAR" property="dictVal" />
    <result column="is_app" jdbcType="INTEGER" property="isApp" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    dict_id, create_time, dict_key, dict_val, is_app, remark, sort, status, update_time
  </sql>
  <select id="selectByExample" parameterType="com.rw.finance.common.entity.SystemSettingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from system_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from system_setting
    where dict_id = #{dictId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from system_setting
    where dict_id = #{dictId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.rw.finance.common.entity.SystemSettingExample">
    delete from system_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rw.finance.common.entity.SystemSetting">
    insert into system_setting (dict_id, create_time, dict_key, 
      dict_val, is_app, remark, 
      sort, status, update_time
      )
    values (#{dictId,jdbcType=BIGINT}, #{createTime,jdbcType=VARCHAR}, #{dictKey,jdbcType=VARCHAR}, 
      #{dictVal,jdbcType=VARCHAR}, #{isApp,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{updateTime,jdbcType=VARCHAR}
      )
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="dictId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.rw.finance.common.entity.SystemSetting">
    insert into system_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dictId != null">
        dict_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="dictKey != null">
        dict_key,
      </if>
      <if test="dictVal != null">
        dict_val,
      </if>
      <if test="isApp != null">
        is_app,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dictId != null">
        #{dictId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="dictKey != null">
        #{dictKey,jdbcType=VARCHAR},
      </if>
      <if test="dictVal != null">
        #{dictVal,jdbcType=VARCHAR},
      </if>
      <if test="isApp != null">
        #{isApp,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="dictId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.rw.finance.common.entity.SystemSettingExample" resultType="java.lang.Long">
    select count(*) from system_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update system_setting
    <set>
      <if test="record.dictId != null">
        dict_id = #{record.dictId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.dictKey != null">
        dict_key = #{record.dictKey,jdbcType=VARCHAR},
      </if>
      <if test="record.dictVal != null">
        dict_val = #{record.dictVal,jdbcType=VARCHAR},
      </if>
      <if test="record.isApp != null">
        is_app = #{record.isApp,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update system_setting
    set dict_id = #{record.dictId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      dict_key = #{record.dictKey,jdbcType=VARCHAR},
      dict_val = #{record.dictVal,jdbcType=VARCHAR},
      is_app = #{record.isApp,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rw.finance.common.entity.SystemSetting">
    update system_setting
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="dictKey != null">
        dict_key = #{dictKey,jdbcType=VARCHAR},
      </if>
      <if test="dictVal != null">
        dict_val = #{dictVal,jdbcType=VARCHAR},
      </if>
      <if test="isApp != null">
        is_app = #{isApp,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where dict_id = #{dictId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rw.finance.common.entity.SystemSetting">
    update system_setting
    set create_time = #{createTime,jdbcType=VARCHAR},
      dict_key = #{dictKey,jdbcType=VARCHAR},
      dict_val = #{dictVal,jdbcType=VARCHAR},
      is_app = #{isApp,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=VARCHAR}
    where dict_id = #{dictId,jdbcType=BIGINT}
  </update>
</mapper>