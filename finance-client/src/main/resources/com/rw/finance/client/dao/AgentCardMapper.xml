<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rw.finance.client.dao.AgentCardMapper">
  <resultMap id="BaseResultMap" type="com.rw.finance.common.entity.AgentCard">
    <id column="agent_card_id" jdbcType="BIGINT" property="agentCardId" />
    <result column="abbreviation" jdbcType="VARCHAR" property="abbreviation" />
    <result column="agent_id" jdbcType="BIGINT" property="agentId" />
    <result column="bank_id" jdbcType="BIGINT" property="bankId" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="card_holder" jdbcType="VARCHAR" property="cardHolder" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="isdel" jdbcType="INTEGER" property="isdel" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    agent_card_id, abbreviation, agent_id, bank_id, bank_name, card_holder, card_no, 
    city, create_time, isdel, mobile, province, update_time
  </sql>
  <select id="selectByExample" parameterType="com.rw.finance.common.entity.AgentCardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent_card
    where agent_card_id = #{agentCardId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from agent_card
    where agent_card_id = #{agentCardId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.rw.finance.common.entity.AgentCardExample">
    delete from agent_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rw.finance.common.entity.AgentCard">
    insert into agent_card (agent_card_id, abbreviation, agent_id, 
      bank_id, bank_name, card_holder, 
      card_no, city, create_time, 
      isdel, mobile, province, 
      update_time)
    values (#{agentCardId,jdbcType=BIGINT}, #{abbreviation,jdbcType=VARCHAR}, #{agentId,jdbcType=BIGINT}, 
      #{bankId,jdbcType=BIGINT}, #{bankName,jdbcType=VARCHAR}, #{cardHolder,jdbcType=VARCHAR}, 
      #{cardNo,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{isdel,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=VARCHAR})
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="agentCardId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.rw.finance.common.entity.AgentCard">
    insert into agent_card
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="agentCardId != null">
        agent_card_id,
      </if>
      <if test="abbreviation != null">
        abbreviation,
      </if>
      <if test="agentId != null">
        agent_id,
      </if>
      <if test="bankId != null">
        bank_id,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="cardHolder != null">
        card_holder,
      </if>
      <if test="cardNo != null">
        card_no,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isdel != null">
        isdel,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="agentCardId != null">
        #{agentCardId,jdbcType=BIGINT},
      </if>
      <if test="abbreviation != null">
        #{abbreviation,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=BIGINT},
      </if>
      <if test="bankId != null">
        #{bankId,jdbcType=BIGINT},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="cardHolder != null">
        #{cardHolder,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null">
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="agentCardId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.rw.finance.common.entity.AgentCardExample" resultType="java.lang.Long">
    select count(*) from agent_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent_card
    <set>
      <if test="record.agentCardId != null">
        agent_card_id = #{record.agentCardId,jdbcType=BIGINT},
      </if>
      <if test="record.abbreviation != null">
        abbreviation = #{record.abbreviation,jdbcType=VARCHAR},
      </if>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=BIGINT},
      </if>
      <if test="record.bankId != null">
        bank_id = #{record.bankId,jdbcType=BIGINT},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.cardHolder != null">
        card_holder = #{record.cardHolder,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNo != null">
        card_no = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.isdel != null">
        isdel = #{record.isdel,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent_card
    set agent_card_id = #{record.agentCardId,jdbcType=BIGINT},
      abbreviation = #{record.abbreviation,jdbcType=VARCHAR},
      agent_id = #{record.agentId,jdbcType=BIGINT},
      bank_id = #{record.bankId,jdbcType=BIGINT},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      card_holder = #{record.cardHolder,jdbcType=VARCHAR},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      isdel = #{record.isdel,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rw.finance.common.entity.AgentCard">
    update agent_card
    <set>
      <if test="abbreviation != null">
        abbreviation = #{abbreviation,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null">
        agent_id = #{agentId,jdbcType=BIGINT},
      </if>
      <if test="bankId != null">
        bank_id = #{bankId,jdbcType=BIGINT},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="cardHolder != null">
        card_holder = #{cardHolder,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null">
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where agent_card_id = #{agentCardId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rw.finance.common.entity.AgentCard">
    update agent_card
    set abbreviation = #{abbreviation,jdbcType=VARCHAR},
      agent_id = #{agentId,jdbcType=BIGINT},
      bank_id = #{bankId,jdbcType=BIGINT},
      bank_name = #{bankName,jdbcType=VARCHAR},
      card_holder = #{cardHolder,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      isdel = #{isdel,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR}
    where agent_card_id = #{agentCardId,jdbcType=BIGINT}
  </update>
</mapper>