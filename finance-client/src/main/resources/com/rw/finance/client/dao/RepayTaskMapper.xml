<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rw.finance.client.dao.RepayTaskMapper">
  <resultMap id="BaseResultMap" type="com.rw.finance.common.entity.RepayTask">
    <id column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="actual_amount" jdbcType="DOUBLE" property="actualAmount" />
    <result column="batch" jdbcType="INTEGER" property="batch" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="current_stage" jdbcType="INTEGER" property="currentStage" />
    <result column="execute_time" jdbcType="VARCHAR" property="executeTime" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="plan_id" jdbcType="BIGINT" property="planId" />
    <result column="poundage" jdbcType="DOUBLE" property="poundage" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="task_amount" jdbcType="DOUBLE" property="taskAmount" />
    <result column="task_type" jdbcType="INTEGER" property="taskType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    task_id, actual_amount, batch, create_time, current_stage, execute_time, member_id, 
    plan_id, poundage, status, task_amount, task_type
  </sql>
  <select id="selectByExample" parameterType="com.rw.finance.common.entity.RepayTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from repay_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from repay_task
    where task_id = #{taskId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from repay_task
    where task_id = #{taskId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.rw.finance.common.entity.RepayTaskExample">
    delete from repay_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rw.finance.common.entity.RepayTask">
    insert into repay_task (task_id, actual_amount, batch, 
      create_time, current_stage, execute_time, 
      member_id, plan_id, poundage, 
      status, task_amount, task_type
      )
    values (#{taskId,jdbcType=BIGINT}, #{actualAmount,jdbcType=DOUBLE}, #{batch,jdbcType=INTEGER}, 
      #{createTime,jdbcType=VARCHAR}, #{currentStage,jdbcType=INTEGER}, #{executeTime,jdbcType=VARCHAR}, 
      #{memberId,jdbcType=BIGINT}, #{planId,jdbcType=BIGINT}, #{poundage,jdbcType=DOUBLE}, 
      #{status,jdbcType=INTEGER}, #{taskAmount,jdbcType=DOUBLE}, #{taskType,jdbcType=INTEGER}
      )
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="taskId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.rw.finance.common.entity.RepayTask">
    insert into repay_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="actualAmount != null">
        actual_amount,
      </if>
      <if test="batch != null">
        batch,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="currentStage != null">
        current_stage,
      </if>
      <if test="executeTime != null">
        execute_time,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="planId != null">
        plan_id,
      </if>
      <if test="poundage != null">
        poundage,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="taskAmount != null">
        task_amount,
      </if>
      <if test="taskType != null">
        task_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="actualAmount != null">
        #{actualAmount,jdbcType=DOUBLE},
      </if>
      <if test="batch != null">
        #{batch,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="currentStage != null">
        #{currentStage,jdbcType=INTEGER},
      </if>
      <if test="executeTime != null">
        #{executeTime,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="planId != null">
        #{planId,jdbcType=BIGINT},
      </if>
      <if test="poundage != null">
        #{poundage,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="taskAmount != null">
        #{taskAmount,jdbcType=DOUBLE},
      </if>
      <if test="taskType != null">
        #{taskType,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="taskId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.rw.finance.common.entity.RepayTaskExample" resultType="java.lang.Long">
    select count(*) from repay_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update repay_task
    <set>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=BIGINT},
      </if>
      <if test="record.actualAmount != null">
        actual_amount = #{record.actualAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.batch != null">
        batch = #{record.batch,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.currentStage != null">
        current_stage = #{record.currentStage,jdbcType=INTEGER},
      </if>
      <if test="record.executeTime != null">
        execute_time = #{record.executeTime,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=BIGINT},
      </if>
      <if test="record.planId != null">
        plan_id = #{record.planId,jdbcType=BIGINT},
      </if>
      <if test="record.poundage != null">
        poundage = #{record.poundage,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.taskAmount != null">
        task_amount = #{record.taskAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.taskType != null">
        task_type = #{record.taskType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update repay_task
    set task_id = #{record.taskId,jdbcType=BIGINT},
      actual_amount = #{record.actualAmount,jdbcType=DOUBLE},
      batch = #{record.batch,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      current_stage = #{record.currentStage,jdbcType=INTEGER},
      execute_time = #{record.executeTime,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=BIGINT},
      plan_id = #{record.planId,jdbcType=BIGINT},
      poundage = #{record.poundage,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=INTEGER},
      task_amount = #{record.taskAmount,jdbcType=DOUBLE},
      task_type = #{record.taskType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rw.finance.common.entity.RepayTask">
    update repay_task
    <set>
      <if test="actualAmount != null">
        actual_amount = #{actualAmount,jdbcType=DOUBLE},
      </if>
      <if test="batch != null">
        batch = #{batch,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="currentStage != null">
        current_stage = #{currentStage,jdbcType=INTEGER},
      </if>
      <if test="executeTime != null">
        execute_time = #{executeTime,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="planId != null">
        plan_id = #{planId,jdbcType=BIGINT},
      </if>
      <if test="poundage != null">
        poundage = #{poundage,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="taskAmount != null">
        task_amount = #{taskAmount,jdbcType=DOUBLE},
      </if>
      <if test="taskType != null">
        task_type = #{taskType,jdbcType=INTEGER},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rw.finance.common.entity.RepayTask">
    update repay_task
    set actual_amount = #{actualAmount,jdbcType=DOUBLE},
      batch = #{batch,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      current_stage = #{currentStage,jdbcType=INTEGER},
      execute_time = #{executeTime,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=BIGINT},
      plan_id = #{planId,jdbcType=BIGINT},
      poundage = #{poundage,jdbcType=DOUBLE},
      status = #{status,jdbcType=INTEGER},
      task_amount = #{taskAmount,jdbcType=DOUBLE},
      task_type = #{taskType,jdbcType=INTEGER}
    where task_id = #{taskId,jdbcType=BIGINT}
  </update>
</mapper>