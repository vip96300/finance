<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rw.finance.client.dao.AgentInfoMapper">
  <resultMap id="BaseResultMap" type="com.rw.finance.common.entity.AgentInfo">
    <id column="agent_id" jdbcType="BIGINT" property="agentId" />
    <result column="agent_level" jdbcType="INTEGER" property="agentLevel" />
    <result column="agent_name" jdbcType="VARCHAR" property="agentName" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="intro" jdbcType="VARCHAR" property="intro" />
    <result column="linkman" jdbcType="VARCHAR" property="linkman" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="pay_pwd" jdbcType="VARCHAR" property="payPwd" />
    <result column="power_level" jdbcType="BIGINT" property="powerLevel" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    agent_id, agent_level, agent_name, create_time, intro, linkman, mobile, parent_id, 
    password, pay_pwd, power_level, status, update_time, username, type_id
  </sql>
  <select id="selectByExample" parameterType="com.rw.finance.common.entity.AgentInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agent_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agent_info
    where agent_id = #{agentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from agent_info
    where agent_id = #{agentId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.rw.finance.common.entity.AgentInfoExample">
    delete from agent_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rw.finance.common.entity.AgentInfo">
    insert into agent_info (agent_id, agent_level, agent_name, 
      create_time, intro, linkman, 
      mobile, parent_id, password, 
      pay_pwd, power_level, status, 
      update_time, username, type_id
      )
    values (#{agentId,jdbcType=BIGINT}, #{agentLevel,jdbcType=INTEGER}, #{agentName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR}, #{linkman,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, #{password,jdbcType=VARCHAR}, 
      #{payPwd,jdbcType=VARCHAR}, #{powerLevel,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{typeId,jdbcType=BIGINT}
      )
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="agentId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.rw.finance.common.entity.AgentInfo">
    insert into agent_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="agentId != null">
        agent_id,
      </if>
      <if test="agentLevel != null">
        agent_level,
      </if>
      <if test="agentName != null">
        agent_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="intro != null">
        intro,
      </if>
      <if test="linkman != null">
        linkman,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="payPwd != null">
        pay_pwd,
      </if>
      <if test="powerLevel != null">
        power_level,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="agentId != null">
        #{agentId,jdbcType=BIGINT},
      </if>
      <if test="agentLevel != null">
        #{agentLevel,jdbcType=INTEGER},
      </if>
      <if test="agentName != null">
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null">
        #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="payPwd != null">
        #{payPwd,jdbcType=VARCHAR},
      </if>
      <if test="powerLevel != null">
        #{powerLevel,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=BIGINT},
      </if>
    </trim>
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="agentId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.rw.finance.common.entity.AgentInfoExample" resultType="java.lang.Long">
    select count(*) from agent_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agent_info
    <set>
      <if test="record.agentId != null">
        agent_id = #{record.agentId,jdbcType=BIGINT},
      </if>
      <if test="record.agentLevel != null">
        agent_level = #{record.agentLevel,jdbcType=INTEGER},
      </if>
      <if test="record.agentName != null">
        agent_name = #{record.agentName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.intro != null">
        intro = #{record.intro,jdbcType=VARCHAR},
      </if>
      <if test="record.linkman != null">
        linkman = #{record.linkman,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.payPwd != null">
        pay_pwd = #{record.payPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.powerLevel != null">
        power_level = #{record.powerLevel,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agent_info
    set agent_id = #{record.agentId,jdbcType=BIGINT},
      agent_level = #{record.agentLevel,jdbcType=INTEGER},
      agent_name = #{record.agentName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      intro = #{record.intro,jdbcType=VARCHAR},
      linkman = #{record.linkman,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      password = #{record.password,jdbcType=VARCHAR},
      pay_pwd = #{record.payPwd,jdbcType=VARCHAR},
      power_level = #{record.powerLevel,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rw.finance.common.entity.AgentInfo">
    update agent_info
    <set>
      <if test="agentLevel != null">
        agent_level = #{agentLevel,jdbcType=INTEGER},
      </if>
      <if test="agentName != null">
        agent_name = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null">
        linkman = #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="payPwd != null">
        pay_pwd = #{payPwd,jdbcType=VARCHAR},
      </if>
      <if test="powerLevel != null">
        power_level = #{powerLevel,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
    </set>
    where agent_id = #{agentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rw.finance.common.entity.AgentInfo">
    update agent_info
    set agent_level = #{agentLevel,jdbcType=INTEGER},
      agent_name = #{agentName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      linkman = #{linkman,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      password = #{password,jdbcType=VARCHAR},
      pay_pwd = #{payPwd,jdbcType=VARCHAR},
      power_level = #{powerLevel,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=BIGINT}
    where agent_id = #{agentId,jdbcType=BIGINT}
  </update>
</mapper>