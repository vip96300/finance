<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rw.finance.client.dao.PayChannelMapper">
  <resultMap id="BaseResultMap" type="com.rw.finance.common.entity.PayChannel">
    <id column="channel_id" jdbcType="BIGINT" property="channelId" />
    <result column="channel" jdbcType="VARCHAR" property="channel" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="depict" jdbcType="VARCHAR" property="depict" />
    <result column="is_enable" jdbcType="INTEGER" property="isEnable" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="max_amount" jdbcType="DOUBLE" property="maxAmount" />
    <result column="min_amount" jdbcType="DOUBLE" property="minAmount" />
    <result column="back_mode" jdbcType="INTEGER" property="backMode" />
    <result column="is_def" jdbcType="INTEGER" property="isDef" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    channel_id, channel, create_time, depict, is_enable, name, max_amount, min_amount, 
    back_mode, is_def
  </sql>
  <select id="selectByExample" parameterType="com.rw.finance.common.entity.PayChannelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_channel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pay_channel
    where channel_id = #{channelId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pay_channel
    where channel_id = #{channelId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.rw.finance.common.entity.PayChannelExample">
    delete from pay_channel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rw.finance.common.entity.PayChannel">
    insert into pay_channel (channel_id, channel, create_time, 
      depict, is_enable, name, 
      max_amount, min_amount, back_mode, 
      is_def)
    values (#{channelId,jdbcType=BIGINT}, #{channel,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{depict,jdbcType=VARCHAR}, #{isEnable,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{maxAmount,jdbcType=DOUBLE}, #{minAmount,jdbcType=DOUBLE}, #{backMode,jdbcType=INTEGER}, 
      #{isDef,jdbcType=INTEGER})
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="channelId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.rw.finance.common.entity.PayChannel">
    insert into pay_channel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="depict != null">
        depict,
      </if>
      <if test="isEnable != null">
        is_enable,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="maxAmount != null">
        max_amount,
      </if>
      <if test="minAmount != null">
        min_amount,
      </if>
      <if test="backMode != null">
        back_mode,
      </if>
      <if test="isDef != null">
        is_def,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="channelId != null">
        #{channelId,jdbcType=BIGINT},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="depict != null">
        #{depict,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="maxAmount != null">
        #{maxAmount,jdbcType=DOUBLE},
      </if>
      <if test="minAmount != null">
        #{minAmount,jdbcType=DOUBLE},
      </if>
      <if test="backMode != null">
        #{backMode,jdbcType=INTEGER},
      </if>
      <if test="isDef != null">
        #{isDef,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey resultType="java.lang.Long" order="AFTER"  keyProperty="channelId">
      SELECT  LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.rw.finance.common.entity.PayChannelExample" resultType="java.lang.Long">
    select count(*) from pay_channel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay_channel
    <set>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=BIGINT},
      </if>
      <if test="record.channel != null">
        channel = #{record.channel,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.depict != null">
        depict = #{record.depict,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnable != null">
        is_enable = #{record.isEnable,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.maxAmount != null">
        max_amount = #{record.maxAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.minAmount != null">
        min_amount = #{record.minAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.backMode != null">
        back_mode = #{record.backMode,jdbcType=INTEGER},
      </if>
      <if test="record.isDef != null">
        is_def = #{record.isDef,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay_channel
    set channel_id = #{record.channelId,jdbcType=BIGINT},
      channel = #{record.channel,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      depict = #{record.depict,jdbcType=VARCHAR},
      is_enable = #{record.isEnable,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      max_amount = #{record.maxAmount,jdbcType=DOUBLE},
      min_amount = #{record.minAmount,jdbcType=DOUBLE},
      back_mode = #{record.backMode,jdbcType=INTEGER},
      is_def = #{record.isDef,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rw.finance.common.entity.PayChannel">
    update pay_channel
    <set>
      <if test="channel != null">
        channel = #{channel,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="depict != null">
        depict = #{depict,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        is_enable = #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="maxAmount != null">
        max_amount = #{maxAmount,jdbcType=DOUBLE},
      </if>
      <if test="minAmount != null">
        min_amount = #{minAmount,jdbcType=DOUBLE},
      </if>
      <if test="backMode != null">
        back_mode = #{backMode,jdbcType=INTEGER},
      </if>
      <if test="isDef != null">
        is_def = #{isDef,jdbcType=INTEGER},
      </if>
    </set>
    where channel_id = #{channelId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rw.finance.common.entity.PayChannel">
    update pay_channel
    set channel = #{channel,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      depict = #{depict,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      max_amount = #{maxAmount,jdbcType=DOUBLE},
      min_amount = #{minAmount,jdbcType=DOUBLE},
      back_mode = #{backMode,jdbcType=INTEGER},
      is_def = #{isDef,jdbcType=INTEGER}
    where channel_id = #{channelId,jdbcType=BIGINT}
  </update>
</mapper>